"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ScoreTypedDict(TypedDict):
    total: NotRequired[str]
    r"""Total score (empty string for future games)"""


class Score(BaseModel):
    total: Optional[str] = None
    r"""Total score (empty string for future games)"""


class GameTeamTypedDict(TypedDict):
    current_logo: NotRequired[str]
    r"""URL to team logo (may contain formatInstructions placeholder)"""
    full_name: NotRequired[str]
    id: NotRequired[str]
    score: NotRequired[ScoreTypedDict]
    team_id: NotRequired[str]


class GameTeam(BaseModel):
    current_logo: Annotated[Optional[str], pydantic.Field(alias="currentLogo")] = None
    r"""URL to team logo (may contain formatInstructions placeholder)"""

    full_name: Annotated[Optional[str], pydantic.Field(alias="fullName")] = None

    id: Optional[str] = None

    score: Optional[Score] = None

    team_id: Annotated[Optional[str], pydantic.Field(alias="teamId")] = None
