"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .nextgenstatspositionenum import NextGenStatsPositionEnum
from openapi.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PassRusherStatsTypedDict(TypedDict):
    nfl_id: NotRequired[int]
    gsis_id: NotRequired[str]
    esb_id: NotRequired[str]
    jersey_number: NotRequired[int]
    player_name: NotRequired[str]
    short_name: NotRequired[str]
    team_id: NotRequired[str]
    headshot: NotRequired[str]
    r"""URL to player headshot image (contains formatInstructions placeholder)"""
    position: NotRequired[NextGenStatsPositionEnum]
    r"""Next Gen Stats player position"""
    blitz_count: NotRequired[int]
    avg_separation_to_qb: NotRequired[float]
    tackles: NotRequired[int]
    assists: NotRequired[int]
    sacks: NotRequired[float]
    forced_fumbles: NotRequired[int]


class PassRusherStats(BaseModel):
    nfl_id: Annotated[Optional[int], pydantic.Field(alias="nflId")] = None

    gsis_id: Annotated[Optional[str], pydantic.Field(alias="gsisId")] = None

    esb_id: Annotated[Optional[str], pydantic.Field(alias="esbId")] = None

    jersey_number: Annotated[Optional[int], pydantic.Field(alias="jerseyNumber")] = None

    player_name: Annotated[Optional[str], pydantic.Field(alias="playerName")] = None

    short_name: Annotated[Optional[str], pydantic.Field(alias="shortName")] = None

    team_id: Annotated[Optional[str], pydantic.Field(alias="teamId")] = None

    headshot: Optional[str] = None
    r"""URL to player headshot image (contains formatInstructions placeholder)"""

    position: Optional[NextGenStatsPositionEnum] = None
    r"""Next Gen Stats player position"""

    blitz_count: Annotated[Optional[int], pydantic.Field(alias="blitzCount")] = None

    avg_separation_to_qb: Annotated[
        Optional[float], pydantic.Field(alias="avgSeparationToQb")
    ] = None

    tackles: Optional[int] = None

    assists: Optional[int] = None

    sacks: Optional[float] = None

    forced_fumbles: Annotated[Optional[int], pydantic.Field(alias="forcedFumbles")] = (
        None
    )
