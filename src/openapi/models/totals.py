"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TotalsTypedDict(TypedDict):
    r"""Over/Under (totals) betting odds"""

    over_handicap: NotRequired[float]
    r"""Total points line for over"""
    over_price: NotRequired[int]
    r"""Over odds (American format)"""
    under_handicap: NotRequired[float]
    r"""Total points line for under"""
    under_price: NotRequired[int]
    r"""Under odds (American format)"""


class Totals(BaseModel):
    r"""Over/Under (totals) betting odds"""

    over_handicap: Annotated[Optional[float], pydantic.Field(alias="overHandicap")] = (
        None
    )
    r"""Total points line for over"""

    over_price: Annotated[Optional[int], pydantic.Field(alias="overPrice")] = None
    r"""Over odds (American format)"""

    under_handicap: Annotated[
        Optional[float], pydantic.Field(alias="underHandicap")
    ] = None
    r"""Total points line for under"""

    under_price: Annotated[Optional[int], pydantic.Field(alias="underPrice")] = None
    r"""Under odds (American format)"""
