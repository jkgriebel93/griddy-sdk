"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .game import Game, GameTypedDict
from .playergamestats import PlayerGameStats, PlayerGameStatsTypedDict
from .scoringplay import ScoringPlay, ScoringPlayTypedDict
from .teamgamestats import TeamGameStats, TeamGameStatsTypedDict
from openapi.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AwayTypedDict(TypedDict):
    defense: NotRequired[List[PlayerGameStatsTypedDict]]
    offense: NotRequired[List[PlayerGameStatsTypedDict]]


class Away(BaseModel):
    defense: Optional[List[PlayerGameStats]] = None

    offense: Optional[List[PlayerGameStats]] = None


class HomeTypedDict(TypedDict):
    defense: NotRequired[List[PlayerGameStatsTypedDict]]
    offense: NotRequired[List[PlayerGameStatsTypedDict]]


class Home(BaseModel):
    defense: Optional[List[PlayerGameStats]] = None

    offense: Optional[List[PlayerGameStats]] = None


class PlayerStatsTypedDict(TypedDict):
    away: NotRequired[AwayTypedDict]
    home: NotRequired[HomeTypedDict]


class PlayerStats(BaseModel):
    away: Optional[Away] = None

    home: Optional[Home] = None


class TeamStatsTypedDict(TypedDict):
    away: NotRequired[TeamGameStatsTypedDict]
    home: NotRequired[TeamGameStatsTypedDict]


class TeamStats(BaseModel):
    away: Optional[TeamGameStats] = None

    home: Optional[TeamGameStats] = None


class BoxScoreResponseTypedDict(TypedDict):
    game: NotRequired[GameTypedDict]
    r"""NFL game information including teams, scheduling, and venue details"""
    player_stats: NotRequired[PlayerStatsTypedDict]
    scoring_summary: NotRequired[List[ScoringPlayTypedDict]]
    team_stats: NotRequired[TeamStatsTypedDict]


class BoxScoreResponse(BaseModel):
    game: Optional[Game] = None
    r"""NFL game information including teams, scheduling, and venue details"""

    player_stats: Annotated[
        Optional[PlayerStats], pydantic.Field(alias="playerStats")
    ] = None

    scoring_summary: Annotated[
        Optional[List[ScoringPlay]], pydantic.Field(alias="scoringSummary")
    ] = None

    team_stats: Annotated[Optional[TeamStats], pydantic.Field(alias="teamStats")] = None
