"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .rooftypeenum import RoofTypeEnum
from openapi.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class VenueInfoTypedDict(TypedDict):
    postal_code: NotRequired[str]
    roof_type: NotRequired[RoofTypeEnum]
    r"""Stadium roof type"""
    site_city: NotRequired[str]
    site_full_name: NotRequired[str]
    site_id: NotRequired[int]
    site_state: NotRequired[str]
    smart_id: NotRequired[str]


class VenueInfo(BaseModel):
    postal_code: Annotated[Optional[str], pydantic.Field(alias="postalCode")] = None

    roof_type: Annotated[Optional[RoofTypeEnum], pydantic.Field(alias="roofType")] = (
        None
    )
    r"""Stadium roof type"""

    site_city: Annotated[Optional[str], pydantic.Field(alias="siteCity")] = None

    site_full_name: Annotated[Optional[str], pydantic.Field(alias="siteFullName")] = (
        None
    )

    site_id: Annotated[Optional[int], pydantic.Field(alias="siteId")] = None

    site_state: Annotated[Optional[str], pydantic.Field(alias="siteState")] = None

    smart_id: Annotated[Optional[str], pydantic.Field(alias="smartId")] = None
