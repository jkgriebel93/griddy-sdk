"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .injuredplayergamestatusenum import InjuredPlayerGameStatusEnum
from .player import Player, PlayerTypedDict
from .practicestatusenum import PracticeStatusEnum
from openapi.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PracticeStatusTypedDict(TypedDict):
    friday: NotRequired[PracticeStatusEnum]
    r"""Player practice participation status"""
    thursday: NotRequired[PracticeStatusEnum]
    r"""Player practice participation status"""
    wednesday: NotRequired[PracticeStatusEnum]
    r"""Player practice participation status"""


class PracticeStatus(BaseModel):
    friday: Optional[PracticeStatusEnum] = None
    r"""Player practice participation status"""

    thursday: Optional[PracticeStatusEnum] = None
    r"""Player practice participation status"""

    wednesday: Optional[PracticeStatusEnum] = None
    r"""Player practice participation status"""


class InjuryEntryTypedDict(TypedDict):
    game_status: NotRequired[InjuredPlayerGameStatusEnum]
    r"""Game status designation"""
    injury: NotRequired[str]
    r"""Injury description"""
    player: NotRequired[PlayerTypedDict]
    practice_status: NotRequired[PracticeStatusTypedDict]


class InjuryEntry(BaseModel):
    game_status: Annotated[
        Optional[InjuredPlayerGameStatusEnum], pydantic.Field(alias="gameStatus")
    ] = None
    r"""Game status designation"""

    injury: Optional[str] = None
    r"""Injury description"""

    player: Optional[Player] = None

    practice_status: Annotated[
        Optional[PracticeStatus], pydantic.Field(alias="practiceStatus")
    ] = None
