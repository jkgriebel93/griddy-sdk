"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from griddy.nfl.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ContractInfoTypedDict(TypedDict):
    expiration_year: NotRequired[int]
    r"""Contract expiration year"""
    guaranteed: NotRequired[float]
    r"""Guaranteed money"""
    signing_bonus: NotRequired[float]
    r"""Signing bonus"""
    total_value: NotRequired[float]
    r"""Total contract value"""
    years: NotRequired[int]
    r"""Contract length in years"""


class ContractInfo(BaseModel):
    expiration_year: Annotated[
        Optional[int], pydantic.Field(alias="expirationYear")
    ] = None
    r"""Contract expiration year"""

    guaranteed: Optional[float] = None
    r"""Guaranteed money"""

    signing_bonus: Annotated[Optional[float], pydantic.Field(alias="signingBonus")] = (
        None
    )
    r"""Signing bonus"""

    total_value: Annotated[Optional[float], pydantic.Field(alias="totalValue")] = None
    r"""Total contract value"""

    years: Optional[int] = None
    r"""Contract length in years"""
