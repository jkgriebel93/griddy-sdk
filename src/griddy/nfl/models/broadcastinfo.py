"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from griddy.nfl.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class InternationalWatchOptionsTypedDict(TypedDict):
    broadcasters: NotRequired[List[str]]
    country_code: NotRequired[str]


class InternationalWatchOptions(BaseModel):
    broadcasters: Optional[List[str]] = None

    country_code: Annotated[Optional[str], pydantic.Field(alias="countryCode")] = None


class StreamingNetworksTypedDict(TypedDict):
    host_network: NotRequired[str]
    r"""Primary streaming network"""
    networks: NotRequired[List[str]]
    r"""Available streaming networks"""


class StreamingNetworks(BaseModel):
    host_network: Annotated[Optional[str], pydantic.Field(alias="hostNetwork")] = None
    r"""Primary streaming network"""

    networks: Optional[List[str]] = None
    r"""Available streaming networks"""


class Territory(str, Enum):
    r"""Broadcast territory scope"""

    NATIONAL = "NATIONAL"
    REGIONAL = "REGIONAL"


class BroadcastInfoTypedDict(TypedDict):
    away_network_channels: NotRequired[List[str]]
    r"""Networks broadcasting in away market"""
    home_network_channels: NotRequired[List[str]]
    r"""Networks broadcasting in home market"""
    international_watch_options: NotRequired[List[InternationalWatchOptionsTypedDict]]
    r"""International viewing options"""
    streaming_networks: NotRequired[List[StreamingNetworksTypedDict]]
    territory: NotRequired[Territory]
    r"""Broadcast territory scope"""


class BroadcastInfo(BaseModel):
    away_network_channels: Annotated[
        Optional[List[str]], pydantic.Field(alias="awayNetworkChannels")
    ] = None
    r"""Networks broadcasting in away market"""

    home_network_channels: Annotated[
        Optional[List[str]], pydantic.Field(alias="homeNetworkChannels")
    ] = None
    r"""Networks broadcasting in home market"""

    international_watch_options: Annotated[
        Optional[List[InternationalWatchOptions]],
        pydantic.Field(alias="internationalWatchOptions"),
    ] = None
    r"""International viewing options"""

    streaming_networks: Annotated[
        Optional[List[StreamingNetworks]], pydantic.Field(alias="streamingNetworks")
    ] = None

    territory: Optional[Territory] = None
    r"""Broadcast territory scope"""
