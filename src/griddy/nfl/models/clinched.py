"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ..types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ClinchedTypedDict(TypedDict):
    bye: NotRequired[bool]
    r"""Clinched first-round bye"""
    division: NotRequired[bool]
    r"""Clinched division title"""
    eliminated: NotRequired[bool]
    r"""Eliminated from playoff contention"""
    home_field: NotRequired[bool]
    r"""Clinched home field advantage"""
    playoff: NotRequired[bool]
    r"""Clinched playoff berth"""
    wild_card: NotRequired[bool]
    r"""Clinched wild card berth"""


class Clinched(BaseModel):
    bye: Optional[bool] = None
    r"""Clinched first-round bye"""

    division: Optional[bool] = None
    r"""Clinched division title"""

    eliminated: Optional[bool] = None
    r"""Eliminated from playoff contention"""

    home_field: Annotated[Optional[bool], pydantic.Field(alias="homeField")] = None
    r"""Clinched home field advantage"""

    playoff: Optional[bool] = None
    r"""Clinched playoff berth"""

    wild_card: Annotated[Optional[bool], pydantic.Field(alias="wildCard")] = None
    r"""Clinched wild card berth"""
