"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ..types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TeamScoreTypedDict(TypedDict):
    point_ot: NotRequired[int]
    r"""Overtime points"""
    point_q1: NotRequired[int]
    r"""First quarter points"""
    point_q2: NotRequired[int]
    r"""Second quarter points"""
    point_q3: NotRequired[int]
    r"""Third quarter points"""
    point_q4: NotRequired[int]
    r"""Fourth quarter points"""
    point_total: NotRequired[int]
    r"""Total points scored"""
    timeouts_remaining: NotRequired[int]
    r"""Timeouts left"""


class TeamScore(BaseModel):
    point_ot: Annotated[Optional[int], pydantic.Field(alias="pointOT")] = None
    r"""Overtime points"""

    point_q1: Annotated[Optional[int], pydantic.Field(alias="pointQ1")] = None
    r"""First quarter points"""

    point_q2: Annotated[Optional[int], pydantic.Field(alias="pointQ2")] = None
    r"""Second quarter points"""

    point_q3: Annotated[Optional[int], pydantic.Field(alias="pointQ3")] = None
    r"""Third quarter points"""

    point_q4: Annotated[Optional[int], pydantic.Field(alias="pointQ4")] = None
    r"""Fourth quarter points"""

    point_total: Annotated[Optional[int], pydantic.Field(alias="pointTotal")] = None
    r"""Total points scored"""

    timeouts_remaining: Annotated[
        Optional[int], pydantic.Field(alias="timeoutsRemaining")
    ] = None
    r"""Timeouts left"""
