"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .penalty import Penalty, PenaltyTypedDict
from .playparticipant import PlayParticipant, PlayParticipantTypedDict
from ..types import BaseModel
import pydantic
from typing import List, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


PlayType = Literal[
    "PASS",
    "RUSH",
    "PUNT",
    "KICKOFF",
    "FIELD_GOAL",
    "EXTRA_POINT",
    "PENALTY",
    "TIMEOUT",
    "TWO_MINUTE_WARNING",
]


class PlayTypedDict(TypedDict):
    description: NotRequired[str]
    distance: NotRequired[int]
    down: NotRequired[int]
    game_clock: NotRequired[str]
    penalties: NotRequired[List[PenaltyTypedDict]]
    play_id: NotRequired[str]
    play_number: NotRequired[int]
    play_type: NotRequired[PlayType]
    players: NotRequired[List[PlayParticipantTypedDict]]
    quarter: NotRequired[int]
    result: NotRequired[str]
    yard_line: NotRequired[str]
    yards_gained: NotRequired[int]


class Play(BaseModel):
    description: Optional[str] = None

    distance: Optional[int] = None

    down: Optional[int] = None

    game_clock: Annotated[Optional[str], pydantic.Field(alias="gameClock")] = None

    penalties: Optional[List[Penalty]] = None

    play_id: Annotated[Optional[str], pydantic.Field(alias="playId")] = None

    play_number: Annotated[Optional[int], pydantic.Field(alias="playNumber")] = None

    play_type: Annotated[Optional[PlayType], pydantic.Field(alias="playType")] = None

    players: Optional[List[PlayParticipant]] = None

    quarter: Optional[int] = None

    result: Optional[str] = None

    yard_line: Annotated[Optional[str], pydantic.Field(alias="yardLine")] = None

    yards_gained: Annotated[Optional[int], pydantic.Field(alias="yardsGained")] = None
