"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .gamecenterschedule import GamecenterSchedule, GamecenterScheduleTypedDict
from .passdistanceleaderentry import (
    PassDistanceLeaderEntry,
    PassDistanceLeaderEntryTypedDict,
)
from .passerstats import PasserStats, PasserStatsTypedDict
from .passrusherstats import PassRusherStats, PassRusherStatsTypedDict
from .receiverstats import ReceiverStats, ReceiverStatsTypedDict
from .rusherstats import RusherStats, RusherStatsTypedDict
from .speedleaderentry import SpeedLeaderEntry, SpeedLeaderEntryTypedDict
from .timetosackleaderentry import TimeToSackLeaderEntry, TimeToSackLeaderEntryTypedDict
from griddy.nfl.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PassDistanceLeadersTypedDict(TypedDict):
    home: NotRequired[List[PassDistanceLeaderEntryTypedDict]]
    visitor: NotRequired[List[PassDistanceLeaderEntryTypedDict]]


class PassDistanceLeaders(BaseModel):
    home: Optional[List[PassDistanceLeaderEntry]] = None

    visitor: Optional[List[PassDistanceLeaderEntry]] = None


class SpeedLeadersTypedDict(TypedDict):
    home: NotRequired[List[SpeedLeaderEntryTypedDict]]
    visitor: NotRequired[List[SpeedLeaderEntryTypedDict]]


class SpeedLeaders(BaseModel):
    home: Optional[List[SpeedLeaderEntry]] = None

    visitor: Optional[List[SpeedLeaderEntry]] = None


class TimeToSackLeadersTypedDict(TypedDict):
    home: NotRequired[List[TimeToSackLeaderEntryTypedDict]]
    visitor: NotRequired[List[TimeToSackLeaderEntryTypedDict]]


class TimeToSackLeaders(BaseModel):
    home: Optional[List[TimeToSackLeaderEntry]] = None

    visitor: Optional[List[TimeToSackLeaderEntry]] = None


class LeadersTypedDict(TypedDict):
    pass_distance_leaders: NotRequired[PassDistanceLeadersTypedDict]
    speed_leaders: NotRequired[SpeedLeadersTypedDict]
    time_to_sack_leaders: NotRequired[TimeToSackLeadersTypedDict]


class Leaders(BaseModel):
    pass_distance_leaders: Annotated[
        Optional[PassDistanceLeaders], pydantic.Field(alias="passDistanceLeaders")
    ] = None

    speed_leaders: Annotated[
        Optional[SpeedLeaders], pydantic.Field(alias="speedLeaders")
    ] = None

    time_to_sack_leaders: Annotated[
        Optional[TimeToSackLeaders], pydantic.Field(alias="timeToSackLeaders")
    ] = None


class LeagueAverageSeparationToQbTypedDict(TypedDict):
    avg: NotRequired[float]


class LeagueAverageSeparationToQb(BaseModel):
    avg: Optional[float] = None


class PassRushersTypedDict(TypedDict):
    home: NotRequired[List[PassRusherStatsTypedDict]]
    league_average_separation_to_qb: NotRequired[LeagueAverageSeparationToQbTypedDict]
    visitor: NotRequired[List[PassRusherStatsTypedDict]]


class PassRushers(BaseModel):
    home: Optional[List[PassRusherStats]] = None

    league_average_separation_to_qb: Annotated[
        Optional[LeagueAverageSeparationToQb],
        pydantic.Field(alias="leagueAverageSeparationToQb"),
    ] = None

    visitor: Optional[List[PassRusherStats]] = None


class PassersTypedDict(TypedDict):
    home: NotRequired[PasserStatsTypedDict]
    visitor: NotRequired[PasserStatsTypedDict]


class Passers(BaseModel):
    home: Optional[PasserStats] = None

    visitor: Optional[PasserStats] = None


class LeagueAverageReceiverSeparationTypedDict(TypedDict):
    avg: NotRequired[float]


class LeagueAverageReceiverSeparation(BaseModel):
    avg: Optional[float] = None


class ReceiversTypedDict(TypedDict):
    home: NotRequired[List[ReceiverStatsTypedDict]]
    league_average_receiver_separation: NotRequired[
        LeagueAverageReceiverSeparationTypedDict
    ]
    visitor: NotRequired[List[ReceiverStatsTypedDict]]


class Receivers(BaseModel):
    home: Optional[List[ReceiverStats]] = None

    league_average_receiver_separation: Annotated[
        Optional[LeagueAverageReceiverSeparation],
        pydantic.Field(alias="leagueAverageReceiverSeparation"),
    ] = None

    visitor: Optional[List[ReceiverStats]] = None


class RushersTypedDict(TypedDict):
    home: NotRequired[List[RusherStatsTypedDict]]
    visitor: NotRequired[List[RusherStatsTypedDict]]


class Rushers(BaseModel):
    home: Optional[List[RusherStats]] = None

    visitor: Optional[List[RusherStats]] = None


class GamecenterResponseTypedDict(TypedDict):
    leaders: NotRequired[LeadersTypedDict]
    pass_rushers: NotRequired[PassRushersTypedDict]
    passers: NotRequired[PassersTypedDict]
    receivers: NotRequired[ReceiversTypedDict]
    rushers: NotRequired[RushersTypedDict]
    schedule: NotRequired[GamecenterScheduleTypedDict]


class GamecenterResponse(BaseModel):
    leaders: Optional[Leaders] = None

    pass_rushers: Annotated[
        Optional[PassRushers], pydantic.Field(alias="passRushers")
    ] = None

    passers: Optional[Passers] = None

    receivers: Optional[Receivers] = None

    rushers: Optional[Rushers] = None

    schedule: Optional[GamecenterSchedule] = None
