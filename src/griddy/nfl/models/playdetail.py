"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .playstat import PlayStat, PlayStatTypedDict
from datetime import datetime
from griddy_nfl.types import BaseModel
import pydantic
from typing import List, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


PlayDirection = Literal[
    "left",
    "right",
    "middle",
]
r"""Direction of play"""


PlayState = Literal[
    "APPROVED",
    "PENDING",
    "REVIEWED",
]
r"""Review state of play"""


class PlayDetailTypedDict(TypedDict):
    absolute_yardline_number: NotRequired[int]
    r"""Absolute position on 100-yard field"""
    down: NotRequired[int]
    r"""Current down (0 for kickoff)"""
    end_game_clock: NotRequired[str]
    r"""Game clock at play end"""
    expected_points: NotRequired[float]
    r"""Expected points value"""
    expected_points_added: NotRequired[float]
    r"""Expected points added on this play"""
    game_clock: NotRequired[str]
    r"""Time on game clock"""
    game_id: NotRequired[int]
    home_score: NotRequired[int]
    home_timeouts_left: NotRequired[int]
    r"""Home team timeouts remaining"""
    is_big_play: NotRequired[bool]
    is_change_of_possession: NotRequired[bool]
    is_end_quarter: NotRequired[bool]
    is_goal_to_go: NotRequired[bool]
    is_no_play: NotRequired[bool]
    is_penalty: NotRequired[bool]
    is_played_out_play: NotRequired[bool]
    is_playtime_play: NotRequired[bool]
    is_redzone_play: NotRequired[bool]
    is_st_play: NotRequired[bool]
    r"""Special teams play"""
    is_scoring: NotRequired[bool]
    play_description: NotRequired[str]
    r"""Play description without jersey numbers"""
    play_description_with_jersey_numbers: NotRequired[str]
    r"""Play description including jersey numbers"""
    play_direction: NotRequired[PlayDirection]
    r"""Direction of play"""
    play_id: NotRequired[int]
    play_state: NotRequired[PlayState]
    r"""Review state of play"""
    play_stats: NotRequired[List[PlayStatTypedDict]]
    r"""Individual player statistics for this play"""
    play_type: NotRequired[str]
    r"""Type of play"""
    play_type_code: NotRequired[int]
    r"""Numeric code for play type"""
    possession_team_id: NotRequired[str]
    r"""Team ID with possession"""
    post_play_home_team_win_probability: NotRequired[float]
    r"""Home team win probability after play"""
    post_play_visitor_team_win_probability: NotRequired[float]
    r"""Visitor team win probability after play"""
    pre_snap_home_score: NotRequired[int]
    pre_snap_home_team_win_probability: NotRequired[float]
    r"""Home team win probability before play"""
    pre_snap_visitor_score: NotRequired[int]
    pre_snap_visitor_team_win_probability: NotRequired[float]
    r"""Visitor team win probability before play"""
    quarter: NotRequired[int]
    r"""Current quarter"""
    sequence: NotRequired[int]
    r"""Play sequence number"""
    start_game_clock: NotRequired[str]
    r"""Game clock at play start"""
    time_of_day_utc: NotRequired[datetime]
    r"""UTC timestamp of play"""
    visitor_score: NotRequired[int]
    visitor_timeouts_left: NotRequired[int]
    r"""Visitor team timeouts remaining"""
    yardline: NotRequired[str]
    r"""Field position"""
    yardline_number: NotRequired[int]
    r"""Yard line number"""
    yardline_side: NotRequired[str]
    r"""Side of field"""
    yards_to_go: NotRequired[int]
    r"""Yards needed for first down"""


class PlayDetail(BaseModel):
    absolute_yardline_number: Annotated[
        Optional[int], pydantic.Field(alias="absoluteYardlineNumber")
    ] = None
    r"""Absolute position on 100-yard field"""

    down: Optional[int] = None
    r"""Current down (0 for kickoff)"""

    end_game_clock: Annotated[Optional[str], pydantic.Field(alias="endGameClock")] = (
        None
    )
    r"""Game clock at play end"""

    expected_points: Annotated[
        Optional[float], pydantic.Field(alias="expectedPoints")
    ] = None
    r"""Expected points value"""

    expected_points_added: Annotated[
        Optional[float], pydantic.Field(alias="expectedPointsAdded")
    ] = None
    r"""Expected points added on this play"""

    game_clock: Annotated[Optional[str], pydantic.Field(alias="gameClock")] = None
    r"""Time on game clock"""

    game_id: Annotated[Optional[int], pydantic.Field(alias="gameId")] = None

    home_score: Annotated[Optional[int], pydantic.Field(alias="homeScore")] = None

    home_timeouts_left: Annotated[
        Optional[int], pydantic.Field(alias="homeTimeoutsLeft")
    ] = None
    r"""Home team timeouts remaining"""

    is_big_play: Annotated[Optional[bool], pydantic.Field(alias="isBigPlay")] = None

    is_change_of_possession: Annotated[
        Optional[bool], pydantic.Field(alias="isChangeOfPossession")
    ] = None

    is_end_quarter: Annotated[Optional[bool], pydantic.Field(alias="isEndQuarter")] = (
        None
    )

    is_goal_to_go: Annotated[Optional[bool], pydantic.Field(alias="isGoalToGo")] = None

    is_no_play: Annotated[Optional[bool], pydantic.Field(alias="isNoPlay")] = None

    is_penalty: Annotated[Optional[bool], pydantic.Field(alias="isPenalty")] = None

    is_played_out_play: Annotated[
        Optional[bool], pydantic.Field(alias="isPlayedOutPlay")
    ] = None

    is_playtime_play: Annotated[
        Optional[bool], pydantic.Field(alias="isPlaytimePlay")
    ] = None

    is_redzone_play: Annotated[
        Optional[bool], pydantic.Field(alias="isRedzonePlay")
    ] = None

    is_st_play: Annotated[Optional[bool], pydantic.Field(alias="isSTPlay")] = None
    r"""Special teams play"""

    is_scoring: Annotated[Optional[bool], pydantic.Field(alias="isScoring")] = None

    play_description: Annotated[
        Optional[str], pydantic.Field(alias="playDescription")
    ] = None
    r"""Play description without jersey numbers"""

    play_description_with_jersey_numbers: Annotated[
        Optional[str], pydantic.Field(alias="playDescriptionWithJerseyNumbers")
    ] = None
    r"""Play description including jersey numbers"""

    play_direction: Annotated[
        Optional[PlayDirection], pydantic.Field(alias="playDirection")
    ] = None
    r"""Direction of play"""

    play_id: Annotated[Optional[int], pydantic.Field(alias="playId")] = None

    play_state: Annotated[Optional[PlayState], pydantic.Field(alias="playState")] = None
    r"""Review state of play"""

    play_stats: Annotated[
        Optional[List[PlayStat]], pydantic.Field(alias="playStats")
    ] = None
    r"""Individual player statistics for this play"""

    play_type: Annotated[Optional[str], pydantic.Field(alias="playType")] = None
    r"""Type of play"""

    play_type_code: Annotated[Optional[int], pydantic.Field(alias="playTypeCode")] = (
        None
    )
    r"""Numeric code for play type"""

    possession_team_id: Annotated[
        Optional[str], pydantic.Field(alias="possessionTeamId")
    ] = None
    r"""Team ID with possession"""

    post_play_home_team_win_probability: Annotated[
        Optional[float], pydantic.Field(alias="postPlayHomeTeamWinProbability")
    ] = None
    r"""Home team win probability after play"""

    post_play_visitor_team_win_probability: Annotated[
        Optional[float], pydantic.Field(alias="postPlayVisitorTeamWinProbability")
    ] = None
    r"""Visitor team win probability after play"""

    pre_snap_home_score: Annotated[
        Optional[int], pydantic.Field(alias="preSnapHomeScore")
    ] = None

    pre_snap_home_team_win_probability: Annotated[
        Optional[float], pydantic.Field(alias="preSnapHomeTeamWinProbability")
    ] = None
    r"""Home team win probability before play"""

    pre_snap_visitor_score: Annotated[
        Optional[int], pydantic.Field(alias="preSnapVisitorScore")
    ] = None

    pre_snap_visitor_team_win_probability: Annotated[
        Optional[float], pydantic.Field(alias="preSnapVisitorTeamWinProbability")
    ] = None
    r"""Visitor team win probability before play"""

    quarter: Optional[int] = None
    r"""Current quarter"""

    sequence: Optional[int] = None
    r"""Play sequence number"""

    start_game_clock: Annotated[
        Optional[str], pydantic.Field(alias="startGameClock")
    ] = None
    r"""Game clock at play start"""

    time_of_day_utc: Annotated[
        Optional[datetime], pydantic.Field(alias="timeOfDayUTC")
    ] = None
    r"""UTC timestamp of play"""

    visitor_score: Annotated[Optional[int], pydantic.Field(alias="visitorScore")] = None

    visitor_timeouts_left: Annotated[
        Optional[int], pydantic.Field(alias="visitorTimeoutsLeft")
    ] = None
    r"""Visitor team timeouts remaining"""

    yardline: Optional[str] = None
    r"""Field position"""

    yardline_number: Annotated[
        Optional[int], pydantic.Field(alias="yardlineNumber")
    ] = None
    r"""Yard line number"""

    yardline_side: Annotated[Optional[str], pydantic.Field(alias="yardlineSide")] = None
    r"""Side of field"""

    yards_to_go: Annotated[Optional[int], pydantic.Field(alias="yardsToGo")] = None
    r"""Yards needed for first down"""
