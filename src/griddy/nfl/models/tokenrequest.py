"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .networktypeenum import NetworkTypeEnum
from griddy.nfl.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TokenRequestTypedDict(TypedDict):
    client_key: NotRequired[str]
    r"""Client application identifier key"""
    client_secret: NotRequired[str]
    r"""Client application secret for authentication"""
    device_id: NotRequired[str]
    r"""Unique device identifier (UUID format)"""
    device_info: NotRequired[str]
    r"""Base64-encoded JSON containing device information such as: {\"model\":\"desktop\",\"version\":\"Chrome\",\"osName\":\"Windows\",\"osVersion\":\"10\"}"""
    network_type: NotRequired[NetworkTypeEnum]
    r"""Type of network connection"""


class TokenRequest(BaseModel):
    client_key: Annotated[Optional[str], pydantic.Field(alias="clientKey")] = None
    r"""Client application identifier key"""

    client_secret: Annotated[Optional[str], pydantic.Field(alias="clientSecret")] = None
    r"""Client application secret for authentication"""

    device_id: Annotated[Optional[str], pydantic.Field(alias="deviceId")] = None
    r"""Unique device identifier (UUID format)"""

    device_info: Annotated[Optional[str], pydantic.Field(alias="deviceInfo")] = None
    r"""Base64-encoded JSON containing device information such as: {\"model\":\"desktop\",\"version\":\"Chrome\",\"osName\":\"Windows\",\"osVersion\":\"10\"}"""

    network_type: Annotated[
        Optional[NetworkTypeEnum], pydantic.Field(alias="networkType")
    ] = None
    r"""Type of network connection"""
