"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .player import Player, PlayerTypedDict
from .seasontypeenum import SeasonTypeEnum
from .team import Team, TeamTypedDict
from griddy.nfl.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PlayerStatsResponsePaginationTypedDict(TypedDict):
    limit: NotRequired[int]
    offset: NotRequired[int]
    total: NotRequired[int]


class PlayerStatsResponsePagination(BaseModel):
    limit: Optional[int] = None

    offset: Optional[int] = None

    total: Optional[int] = None


class PlayerStatsResponseStatsTypedDict(TypedDict):
    r"""Statistics object varies by category"""


class PlayerStatsResponseStats(BaseModel):
    r"""Statistics object varies by category"""


class PlayersModelTypedDict(TypedDict):
    player: NotRequired[PlayerTypedDict]
    stats: NotRequired[PlayerStatsResponseStatsTypedDict]
    r"""Statistics object varies by category"""
    team: NotRequired[TeamTypedDict]


class PlayersModel(BaseModel):
    player: Optional[Player] = None

    stats: Optional[PlayerStatsResponseStats] = None
    r"""Statistics object varies by category"""

    team: Optional[Team] = None


class PlayerStatsResponseTypedDict(TypedDict):
    pagination: NotRequired[PlayerStatsResponsePaginationTypedDict]
    players: NotRequired[List[PlayersModelTypedDict]]
    season: NotRequired[int]
    season_type: NotRequired[SeasonTypeEnum]
    r"""Type of NFL season"""
    stat_category: NotRequired[str]


class PlayerStatsResponse(BaseModel):
    pagination: Optional[PlayerStatsResponsePagination] = None

    players: Optional[List[PlayersModel]] = None

    season: Optional[int] = None

    season_type: Annotated[
        Optional[SeasonTypeEnum], pydantic.Field(alias="seasonType")
    ] = None
    r"""Type of NFL season"""

    stat_category: Annotated[Optional[str], pydantic.Field(alias="statCategory")] = None
