"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .nextgenstatspositionenum import NextGenStatsPositionEnum
from .seasontypeenum import SeasonTypeEnum
from datetime import date, datetime
from griddy.nfl.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GameInsightTypedDict(TypedDict):
    r"""Game-specific analytical insight"""

    season: NotRequired[int]
    season_type: NotRequired[SeasonTypeEnum]
    r"""Type of NFL season"""
    week: NotRequired[int]
    nfl_id: NotRequired[int]
    player_name: NotRequired[str]
    esb_id: NotRequired[str]
    gsis_id: NotRequired[str]
    smart_id: NotRequired[str]
    jersey_number: NotRequired[int]
    position: NotRequired[NextGenStatsPositionEnum]
    r"""Next Gen Stats player position"""
    team_id: NotRequired[str]
    team_abbr: NotRequired[str]
    title: NotRequired[str]
    r"""A short-ish description of the insight"""
    sub_note1: NotRequired[str]
    r"""A longer elaboration of the insight"""
    date_: NotRequired[date]
    evergreen: NotRequired[bool]
    created_at: NotRequired[datetime]
    created_by: NotRequired[str]
    r"""Appears to be the username of the NFL staff that created the insight"""
    updated_at: NotRequired[datetime]
    updated_by: NotRequired[str]
    game_id: NotRequired[int]
    headshot: NotRequired[str]
    r"""URL to player headshot image (contains formatInstructions placeholder)"""
    tags: NotRequired[List[str]]
    id: NotRequired[str]
    r"""Appears to be a UUID with dashes removed"""


class GameInsight(BaseModel):
    r"""Game-specific analytical insight"""

    season: Optional[int] = None

    season_type: Annotated[
        Optional[SeasonTypeEnum], pydantic.Field(alias="seasonType")
    ] = None
    r"""Type of NFL season"""

    week: Optional[int] = None

    nfl_id: Annotated[Optional[int], pydantic.Field(alias="nflId")] = None

    player_name: Annotated[Optional[str], pydantic.Field(alias="playerName")] = None

    esb_id: Annotated[Optional[str], pydantic.Field(alias="esbId")] = None

    gsis_id: Annotated[Optional[str], pydantic.Field(alias="gsisId")] = None

    smart_id: Annotated[Optional[str], pydantic.Field(alias="smartId")] = None

    jersey_number: Annotated[Optional[int], pydantic.Field(alias="jerseyNumber")] = None

    position: Optional[NextGenStatsPositionEnum] = None
    r"""Next Gen Stats player position"""

    team_id: Annotated[Optional[str], pydantic.Field(alias="teamId")] = None

    team_abbr: Annotated[Optional[str], pydantic.Field(alias="teamAbbr")] = None

    title: Optional[str] = None
    r"""A short-ish description of the insight"""

    sub_note1: Annotated[Optional[str], pydantic.Field(alias="subNote1")] = None
    r"""A longer elaboration of the insight"""

    date_: Annotated[Optional[date], pydantic.Field(alias="date")] = None

    evergreen: Optional[bool] = None

    created_at: Annotated[Optional[datetime], pydantic.Field(alias="createdAt")] = None

    created_by: Annotated[Optional[str], pydantic.Field(alias="createdBy")] = None
    r"""Appears to be the username of the NFL staff that created the insight"""

    updated_at: Annotated[Optional[datetime], pydantic.Field(alias="updatedAt")] = None

    updated_by: Annotated[Optional[str], pydantic.Field(alias="updatedBy")] = None

    game_id: Annotated[Optional[int], pydantic.Field(alias="gameId")] = None

    headshot: Optional[str] = None
    r"""URL to player headshot image (contains formatInstructions placeholder)"""

    tags: Optional[List[str]] = None

    id: Optional[str] = None
    r"""Appears to be a UUID with dashes removed"""
