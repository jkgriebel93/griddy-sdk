openapi: 3.0.3

info:
  contact:
    name: NFL
    url: htttps://www.nfl.com
  description: "\n        Regular API - NFL's public API for accessing game schedules,\
    \ team information, standings, statistics, and venue data. \n        This API\
    \ provides comprehensive access to NFL data including real-time game information,\
    \ team rosters, \n        seasonal statistics, and historical data. \n       \
    \ The NFL Pro API is for accessing advanced statistics, film room content, player\
    \ data, and fantasy information.\n        This API provides comprehensive access\
    \ to NFL Pro features including Next Gen Stats, Film Room analysis,\n        player\
    \ projections, and game insights."
  title: NFL REST APIs
  version: 1.0.0

servers:
  - description: Production Regular NFL API
    url: https://api.nfl.com
  - description: Production NFL Pro API
    url: https://pro.nfl.com

security:
  - BearerAuth: []

tags:
  - description: Token generation and refresh operations for NFL API access
    name: Authentication
  - description: Experience API endpoints for games and teams
    name: Experience
  - description: Football API endpoints for games, standings, stats, and venues
    name: Football

components:
  schemas:
    Award:
      properties:
        awardType:
          enum:
          - MVP
          - OPOY
          - DPOY
          - OROY
          - DROY
          - PRO_BOWL
          - ALL_PRO
          - SUPER_BOWL_MVP
          type: string
        description:
          type: string
        year:
          type: integer
      type: object
    BoxScoreResponse:
      properties:
        game:
          $ref: '#/components/schemas/Game'
        playerStats:
          properties:
            away:
              properties:
                defense:
                  items:
                    $ref: '#/components/schemas/PlayerGameStats'
                  type: array
                offense:
                  items:
                    $ref: '#/components/schemas/PlayerGameStats'
                  type: array
              type: object
            home:
              properties:
                defense:
                  items:
                    $ref: '#/components/schemas/PlayerGameStats'
                  type: array
                offense:
                  items:
                    $ref: '#/components/schemas/PlayerGameStats'
                  type: array
              type: object
          type: object
        scoringSummary:
          items:
            $ref: '#/components/schemas/ScoringPlay'
          type: array
        teamStats:
          properties:
            away:
              $ref: '#/components/schemas/TeamGameStats'
            home:
              $ref: '#/components/schemas/TeamGameStats'
          type: object
      type: object
    BroadcastInfo:
      properties:
        awayNetworkChannels:
          description: Networks broadcasting in away market
          items:
            type: string
          type: array
        homeNetworkChannels:
          description: Networks broadcasting in home market
          items:
            type: string
          type: array
        internationalWatchOptions:
          description: International viewing options
          items:
            type: string
          type: array
        streamingNetworks:
          items:
            properties:
              hostNetwork:
                description: Primary streaming network
                type: string
              networks:
                description: Available streaming networks
                items:
                  type: string
                type: array
            type: object
          type: array
        territory:
          description: Broadcast territory scope
          enum:
          - NATIONAL
          - REGIONAL
          type: string
      type: object
    CareerStats:
      properties:
        seasonStats:
          items:
            $ref: '#/components/schemas/SeasonStats'
          type: array
        totalGames:
          type: integer
        totalStarts:
          type: integer
      type: object
    ContractInfo:
      properties:
        expirationYear:
          description: Contract expiration year
          type: integer
        guaranteed:
          description: Guaranteed money
          type: number
        signingBonus:
          description: Signing bonus
          type: number
        totalValue:
          description: Total contract value
          type: number
        years:
          description: Contract length in years
          type: integer
      type: object
    DefensiveStats:
      properties:
        assistedTackles:
          type: integer
        forcedFumbles:
          type: integer
        fumbleRecoveries:
          type: integer
        interceptions:
          type: integer
        passesDefended:
          type: integer
        qbHits:
          type: integer
        sacks:
          format: float
          type: number
        safeties:
          type: integer
        soloTackles:
          type: integer
        tackles:
          type: integer
        tacklesForLoss:
          type: integer
      type: object
    DeviceInfo:
      description: Device information object (normally base64 encoded in requests)
      properties:
        model:
          description: Device model or form factor
          example: desktop
          type: string
        osName:
          description: Operating system name
          example: Windows
          type: string
        osVersion:
          description: Operating system version
          example: '10'
          type: string
        version:
          description: Browser or application version
          example: Chrome
          type: string
      type: object
    DraftInfo:
      properties:
        pick:
          description: Overall pick number
          type: integer
        round:
          description: Draft round
          type: integer
        team:
          description: Team that drafted player
          type: string
        year:
          description: Draft year
          type: integer
      type: object
    DraftPick:
      properties:
        college:
          type: string
        isCompensatory:
          type: boolean
        originalTeam:
          $ref: '#/components/schemas/Team'
        overallPick:
          type: integer
        pick:
          type: integer
        player:
          $ref: '#/components/schemas/Player'
        position:
          type: string
        round:
          type: integer
        team:
          $ref: '#/components/schemas/Team'
      type: object
    DraftResponse:
      properties:
        rounds:
          items:
            properties:
              picks:
                items:
                  $ref: '#/components/schemas/DraftPick'
                type: array
              round:
                type: integer
            type: object
          type: array
        year:
          type: integer
      type: object
    Drive:
      properties:
        driveNumber:
          type: integer
        endTime:
          description: Game clock at drive end
          type: string
        endYardLine:
          description: Ending field position
          type: string
        plays:
          items:
            $ref: '#/components/schemas/Play'
          type: array
        quarter:
          type: integer
        result:
          enum:
          - TOUCHDOWN
          - FIELD_GOAL
          - PUNT
          - DOWNS
          - FUMBLE
          - INTERCEPTION
          - SAFETY
          - END_OF_HALF
          - END_OF_GAME
          type: string
        startTime:
          description: Game clock at drive start
          type: string
        startYardLine:
          description: Starting field position
          type: string
        team:
          $ref: '#/components/schemas/Team'
        timeOfPossession:
          description: Drive duration (MM:SS)
          type: string
        totalPlays:
          type: integer
        totalYards:
          type: integer
      type: object
    ExperienceGamesResponse:
      properties:
        games:
          items:
            $ref: '#/components/schemas/Game'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    ExperienceTeamsResponse:
      properties:
        teams:
          items:
            $ref: '#/components/schemas/Team'
          type: array
      type: object
    ExternalId:
      properties:
        id:
          description: ID in external system
          type: string
        source:
          description: External system name
          example: elias
          type: string
      type: object
    FootballGamesResponse:
      properties:
        games:
          items:
            $ref: '#/components/schemas/Game'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    Game:
      properties:
        awayTeam:
          $ref: '#/components/schemas/Team'
        broadcastInfo:
          $ref: '#/components/schemas/BroadcastInfo'
        category:
          description: Prime time game designation
          enum:
          - TNF
          - SNF
          - MNF
          nullable: true
          type: string
        date:
          description: Game date (YYYY-MM-DD)
          format: date
          type: string
        extensions:
          description: Additional game data extensions
          items:
            type: object
          type: array
        externalIds:
          items:
            $ref: '#/components/schemas/ExternalId'
          type: array
        gameType:
          description: Type of game
          example: UNSPECIFIED
          type: string
        homeTeam:
          $ref: '#/components/schemas/Team'
        id:
          description: Unique game identifier
          format: uuid
          type: string
        international:
          description: Whether game is played internationally
          type: boolean
        neutralSite:
          description: Whether game is at neutral venue
          type: boolean
        season:
          description: Season year
          type: integer
        seasonType:
          description: Season type
          enum:
          - PRE
          - REG
          - POST
          type: string
        status:
          description: Game status
          enum:
          - SCHEDULED
          - IN_PROGRESS
          - FINAL
          - POSTPONED
          - CANCELLED
          type: string
        ticketUrl:
          description: Primary ticket purchase URL
          format: uri
          nullable: true
          type: string
        ticketVendors:
          items:
            $ref: '#/components/schemas/TicketVendor'
          type: array
        time:
          description: Game time in UTC
          format: date-time
          type: string
        venue:
          $ref: '#/components/schemas/Venue'
        version:
          description: Data version number
          type: integer
        week:
          description: Week number
          type: integer
        weekType:
          description: Week type (e.g., REG, HOF)
          type: string
      required:
      - id
      - homeTeam
      - awayTeam
      - date
      - time
      - season
      - seasonType
      - status
      - week
      type: object
    GameStatsResponse:
      properties:
        data:
          items:
            description: Game statistics data
            type: object
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    InjuryEntry:
      properties:
        gameStatus:
          description: Game status designation
          enum:
          - QUESTIONABLE
          - DOUBTFUL
          - OUT
          - IR
          type: string
        injury:
          description: Injury description
          example: Ankle
          type: string
        player:
          $ref: '#/components/schemas/Player'
        practiceStatus:
          properties:
            friday:
              enum:
              - DNP
              - LIMITED
              - FULL
              - NOT_LISTED
              type: string
            thursday:
              enum:
              - DNP
              - LIMITED
              - FULL
              - NOT_LISTED
              type: string
            wednesday:
              enum:
              - DNP
              - LIMITED
              - FULL
              - NOT_LISTED
              type: string
          type: object
      type: object
    InjuryReportResponse:
      properties:
        reports:
          items:
            $ref: '#/components/schemas/TeamInjuryReport'
          type: array
        season:
          type: integer
        week:
          type: integer
      type: object
    KickingStats:
      properties:
        extraPointsAttempted:
          type: integer
        extraPointsMade:
          type: integer
        fieldGoalPct:
          format: float
          type: number
        fieldGoalsAttempted:
          type: integer
        fieldGoalsMade:
          type: integer
        longFieldGoal:
          type: integer
        points:
          type: integer
      type: object
    OverallRecord:
      allOf:
      - $ref: '#/components/schemas/PointsRecord'
      - properties:
          games:
            description: Total games played
            type: integer
          streak:
            properties:
              length:
                description: Current streak length
                type: integer
              type:
                description: Streak type
                enum:
                - W
                - L
                - T
                - STREAK_TYPE_WINNING
                - STREAK_TYPE_LOSING
                type: string
            type: object
        type: object
    Pagination:
      properties:
        limit:
          description: Maximum items per page
          type: integer
        token:
          description: Token for next page of results
          nullable: true
          type: string
      type: object
    PassingStats:
      properties:
        attempts:
          type: integer
        completionPct:
          format: float
          type: number
        completions:
          type: integer
        interceptions:
          type: integer
        rating:
          format: float
          type: number
        sackYards:
          type: integer
        sacks:
          type: integer
        touchdowns:
          type: integer
        yards:
          type: integer
      type: object
    Penalty:
      properties:
        accepted:
          type: boolean
        noPlay:
          type: boolean
        player:
          $ref: '#/components/schemas/Player'
        team:
          $ref: '#/components/schemas/Team'
        type:
          type: string
        yards:
          type: integer
      type: object
    Play:
      properties:
        description:
          type: string
        distance:
          type: integer
        down:
          type: integer
        gameClock:
          type: string
        penalties:
          items:
            $ref: '#/components/schemas/Penalty'
          type: array
        playId:
          type: string
        playNumber:
          type: integer
        playType:
          enum:
          - PASS
          - RUSH
          - PUNT
          - KICKOFF
          - FIELD_GOAL
          - EXTRA_POINT
          - PENALTY
          - TIMEOUT
          - TWO_MINUTE_WARNING
          type: string
        players:
          items:
            $ref: '#/components/schemas/PlayParticipant'
          type: array
        quarter:
          type: integer
        result:
          type: string
        yardLine:
          type: string
        yardsGained:
          type: integer
      type: object
    PlayByPlayResponse:
      properties:
        currentDrive:
          $ref: '#/components/schemas/Drive'
        drives:
          items:
            $ref: '#/components/schemas/Drive'
          type: array
        game:
          $ref: '#/components/schemas/Game'
        lastPlay:
          $ref: '#/components/schemas/Play'
        scoringSummary:
          items:
            $ref: '#/components/schemas/ScoringPlay'
          type: array
      type: object
    PlayParticipant:
      properties:
        player:
          $ref: '#/components/schemas/Player'
        role:
          enum:
          - PASSER
          - RUSHER
          - RECEIVER
          - TACKLER
          - KICKER
          - RETURNER
          - BLOCKER
          type: string
        stats:
          description: Play-specific statistics
          type: object
      type: object
    Player:
      properties:
        birthDate:
          description: Date of birth
          format: date
          type: string
        college:
          description: College attended
          example: Texas Tech
          type: string
        currentTeam:
          $ref: '#/components/schemas/Team'
        displayName:
          description: Display name
          example: Patrick Mahomes
          type: string
        draftInfo:
          $ref: '#/components/schemas/DraftInfo'
        experienceYears:
          description: Years of NFL experience
          type: integer
        firstName:
          description: Player's first name
          example: Patrick
          type: string
        height:
          description: Height in feet-inches
          example: 6-3
          type: string
        id:
          description: Player identifier
          example: '2560726'
          type: string
        jerseyNumber:
          description: Jersey number
          example: 15
          type: integer
        lastName:
          description: Player's last name
          example: Mahomes
          type: string
        position:
          description: Position code
          example: QB
          type: string
        profileImage:
          description: URL to player profile image
          format: uri
          type: string
        status:
          description: Player status
          enum:
          - ACTIVE
          - INACTIVE
          - PRACTICE_SQUAD
          - INJURED_RESERVE
          - PUP
          - SUSPENDED
          type: string
        weight:
          description: Weight in pounds
          example: 230
          type: integer
      required:
      - id
      - firstName
      - lastName
      - position
      - jerseyNumber
      type: object
    PlayerDetail:
      allOf:
      - $ref: '#/components/schemas/Player'
      - properties:
          awards:
            items:
              $ref: '#/components/schemas/Award'
            type: array
          biography:
            description: Player biography
            type: string
          careerStats:
            $ref: '#/components/schemas/CareerStats'
          contractInfo:
            $ref: '#/components/schemas/ContractInfo'
          currentSeasonStats:
            $ref: '#/components/schemas/SeasonStats'
        type: object
    PlayerGameStats:
      properties:
        defensive:
          $ref: '#/components/schemas/DefensiveStats'
        kicking:
          $ref: '#/components/schemas/KickingStats'
        passing:
          $ref: '#/components/schemas/PassingStats'
        player:
          $ref: '#/components/schemas/Player'
        receiving:
          $ref: '#/components/schemas/ReceivingStats'
        rushing:
          $ref: '#/components/schemas/RushingStats'
      type: object
    PlayerStatsResponse:
      properties:
        pagination:
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer
          type: object
        players:
          items:
            properties:
              player:
                $ref: '#/components/schemas/Player'
              stats:
                description: Statistics object varies by category
                type: object
              team:
                $ref: '#/components/schemas/Team'
            type: object
          type: array
        season:
          type: integer
        seasonType:
          type: string
        statCategory:
          type: string
      type: object
    PointsRecord:
      allOf:
      - $ref: '#/components/schemas/Record'
      - properties:
          points:
            properties:
              against:
                type: integer
              for:
                type: integer
            type: object
          winPct:
            format: float
            type: number
        type: object
    ReceivingStats:
      properties:
        drops:
          type: integer
        longReception:
          type: integer
        receptions:
          type: integer
        targets:
          type: integer
        touchdowns:
          type: integer
        yards:
          type: integer
        yardsPerReception:
          format: float
          type: number
      type: object
    Record:
      properties:
        losses:
          type: integer
        ties:
          type: integer
        wins:
          type: integer
      type: object
    RefreshTokenRequest:
      allOf:
      - $ref: '#/components/schemas/TokenRequest'
      - properties:
          refreshToken:
            description: Valid refresh token from previous authentication
            example: 640b00c7-33d8-44f2-ab46-e3d1284a4061
            format: uuid
            type: string
          signatureTimestamp:
            description: Unix timestamp for signature verification
            example: '1758729181'
            type: string
          uid:
            description: User identifier hash
            example: df990acd951e4bd6940c3babc4341584
            type: string
          uidSignature:
            description: HMAC signature for request verification
            example: 587bdNt6EKYhhX9ASFOELX+2lqE=
            type: string
        required:
        - signatureTimestamp
        - uid
        - uidSignature
        - refreshToken
        type: object
    RosterResponse:
      properties:
        roster:
          properties:
            defense:
              items:
                $ref: '#/components/schemas/Player'
              type: array
            injuredReserve:
              items:
                $ref: '#/components/schemas/Player'
              type: array
            offense:
              items:
                $ref: '#/components/schemas/Player'
              type: array
            practiceSquad:
              items:
                $ref: '#/components/schemas/Player'
              type: array
            specialTeams:
              items:
                $ref: '#/components/schemas/Player'
              type: array
          type: object
        season:
          type: integer
        team:
          $ref: '#/components/schemas/Team'
      type: object
    RushingStats:
      properties:
        carries:
          type: integer
        fumbles:
          type: integer
        longRush:
          type: integer
        touchdowns:
          type: integer
        yards:
          type: integer
        yardsPerCarry:
          format: float
          type: number
      type: object
    ScoringPlay:
      properties:
        awayScore:
          type: integer
        description:
          type: string
        gameClock:
          type: string
        homeScore:
          type: integer
        quarter:
          type: integer
        scoreType:
          enum:
          - TOUCHDOWN
          - FIELD_GOAL
          - SAFETY
          - EXTRA_POINT
          - TWO_POINT_CONVERSION
          type: string
        team:
          $ref: '#/components/schemas/Team'
      type: object
    SeasonStats:
      properties:
        defensive:
          $ref: '#/components/schemas/DefensiveStats'
        games:
          type: integer
        kicking:
          $ref: '#/components/schemas/KickingStats'
        passing:
          $ref: '#/components/schemas/PassingStats'
        receiving:
          $ref: '#/components/schemas/ReceivingStats'
        rushing:
          $ref: '#/components/schemas/RushingStats'
        season:
          type: integer
        seasonType:
          enum:
          - PRE
          - REG
          - POST
          type: string
        starts:
          type: integer
      type: object
    SocialMedia:
      properties:
        link:
          description: URL to social media profile
          format: uri
          type: string
        platform:
          description: Social media platform name
          example: Facebook
          type: string
      type: object
    Standings:
      properties:
        clinched:
          properties:
            bye:
              type: boolean
            division:
              type: boolean
            eliminated:
              type: boolean
            homeField:
              type: boolean
            playoff:
              type: boolean
            wildCard:
              type: boolean
          type: object
        closeGames:
          $ref: '#/components/schemas/Record'
        conference:
          $ref: '#/components/schemas/StandingsRecord'
        division:
          $ref: '#/components/schemas/StandingsRecord'
        home:
          $ref: '#/components/schemas/PointsRecord'
        last5:
          $ref: '#/components/schemas/PointsRecord'
        overall:
          $ref: '#/components/schemas/OverallRecord'
        road:
          $ref: '#/components/schemas/PointsRecord'
        team:
          $ref: '#/components/schemas/Team'
      type: object
    StandingsRecord:
      allOf:
      - $ref: '#/components/schemas/Record'
      - properties:
          points:
            properties:
              against:
                description: Points allowed
                type: integer
              for:
                description: Points scored
                type: integer
            type: object
          rank:
            description: Ranking within group
            type: integer
          winPct:
            description: Win percentage
            format: float
            type: number
        type: object
    StandingsResponse:
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        season:
          type: integer
        seasonType:
          type: string
        weeks:
          items:
            properties:
              standings:
                items:
                  $ref: '#/components/schemas/Standings'
                type: array
              week:
                type: integer
            type: object
          type: array
      type: object
    Team:
      properties:
        abbreviation:
          description: Three-letter team abbreviation
          example: ARI
          type: string
        conferenceAbbr:
          description: Conference abbreviation
          enum:
          - AFC
          - NFC
          type: string
        conferenceFullName:
          description: Full conference name
          example: National Football Conference
          type: string
        currentLogo:
          description: URL to team logo (may contain {formatInstructions} placeholder)
          example: https://static.www.nfl.com/formatInstructions/league/api/clubs/logos/ARI
          format: uri
          type: string
        divisionFullName:
          description: Full division name
          example: NFC West
          type: string
        fullName:
          description: Full team name
          example: Arizona Cardinals
          type: string
        id:
          description: Unique team identifier
          example: 10403800-517c-7b8c-65a3-c61b95d86123
          format: uuid
          type: string
        league:
          description: League name
          example: National Football League
          type: string
        location:
          description: Team location/city
          example: Arizona
          type: string
        nflShopUrl:
          description: URL to team's NFL shop
          format: uri
          nullable: true
          type: string
        nickName:
          description: Team nickname
          example: Cardinals
          type: string
        officialWebsiteUrl:
          description: Team's official website
          format: uri
          nullable: true
          type: string
        owners:
          description: Team ownership information
          nullable: true
          type: string
        primaryColor:
          description: Primary team color (hex)
          example: '#97233F'
          type: string
        season:
          description: Current season
          example: '2025'
          type: string
        secondaryColor:
          description: Secondary team color (hex)
          example: '#000000'
          type: string
        socials:
          items:
            $ref: '#/components/schemas/SocialMedia'
          type: array
        teamType:
          description: Type of team (regular or Pro Bowl)
          enum:
          - TEAM
          - PRO
          type: string
        venues:
          items:
            $ref: '#/components/schemas/TeamVenue'
          type: array
        yearEstablished:
          description: Year team was established
          example: 1920
          type: integer
      required:
      - id
      - fullName
      - currentLogo
      type: object
    TeamGameStats:
      properties:
        firstDowns:
          type: integer
        fourthDownConversions:
          example: 1/2
          type: string
        passingYards:
          type: integer
        penalties:
          type: integer
        penaltyYards:
          type: integer
        rushingYards:
          type: integer
        score:
          type: integer
        team:
          $ref: '#/components/schemas/Team'
        thirdDownConversions:
          example: 5/12
          type: string
        timeOfPossession:
          example: '31:45'
          type: string
        totalYards:
          type: integer
        turnovers:
          type: integer
      type: object
    TeamInjuryReport:
      properties:
        injuries:
          items:
            $ref: '#/components/schemas/InjuryEntry'
          type: array
        lastUpdated:
          format: date-time
          type: string
        team:
          $ref: '#/components/schemas/Team'
      type: object
    TeamVenue:
      properties:
        city:
          description: Venue city
          type: string
        country:
          description: Venue country
          type: string
        id:
          description: Venue identifier
          format: uuid
          type: string
        name:
          description: Venue name
          type: string
      type: object
    TicketVendor:
      properties:
        ticketUrl:
          description: Vendor-specific ticket URL
          format: uri
          type: string
        vendorName:
          description: Vendor identifier
          example: ticketmaster
          type: string
      type: object
    TokenRequest:
      properties:
        clientKey:
          description: Client application identifier key
          example: 4cFUW6DmwJpzT9L7LrG3qRAcABG5s04g
          type: string
        clientSecret:
          description: Client application secret for authentication
          example: CZuvCL49d9OwfGsR
          type: string
        deviceId:
          description: Unique device identifier (UUID format)
          example: 3cfdef35-c7fe-4f2d-8630-1ec72f52b44d
          format: uuid
          type: string
        deviceInfo:
          description: 'Base64-encoded JSON containing device information such as:

            {"model":"desktop","version":"Chrome","osName":"Windows","osVersion":"10"}

            '
          example: eyJtb2RlbCI6ImRlc2t0b3AiLCJ2ZXJzaW9uIjoiQ2hyb21lIiwib3NOYW1lIjoiV2luZG93cyIsIm9zVmVyc2lvbiI6IjEwIn0=
          type: string
        networkType:
          description: Type of network connection
          enum:
          - other
          - wifi
          - cellular
          - ethernet
          example: other
          type: string
      required:
      - clientKey
      - clientSecret
      - deviceId
      - deviceInfo
      - networkType
      type: object
    TokenResponse:
      properties:
        accessToken:
          description: 'JWT access token containing user permissions, subscription
            plans, location data, and roles.

            Include this token in the Authorization header as "Bearer {accessToken}"
            for authenticated requests.

            '
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
          type: string
        expiresIn:
          description: Unix timestamp when the access token expires
          example: 1758732647
          format: int64
          type: integer
        refreshToken:
          description: New refresh token for future token refresh requests
          example: 0f5452b5-7f40-4c8e-9801-cf7fd2830de3
          format: uuid
          type: string
      required:
      - expiresIn
      - refreshToken
      - accessToken
      type: object
    Transaction:
      properties:
        compensationDetails:
          description: Trade compensation or contract details
          type: string
        date:
          format: date-time
          type: string
        details:
          description: Transaction details
          type: string
        id:
          type: string
        player:
          $ref: '#/components/schemas/Player'
        relatedTeam:
          $ref: '#/components/schemas/Team'
        team:
          $ref: '#/components/schemas/Team'
        type:
          enum:
          - TRADE
          - SIGNED
          - RELEASED
          - WAIVED
          - PRACTICE_SQUAD
          - IR
          - SUSPENDED
          - ACTIVATED
          type: string
      type: object
    TransactionsResponse:
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      type: object
    Venue:
      properties:
        address:
          description: Street address
          nullable: true
          type: string
        city:
          description: City name
          example: Glendale
          type: string
        country:
          description: Country name
          example: USA
          type: string
        id:
          description: Unique venue identifier
          format: uuid
          type: string
        name:
          description: Venue name
          example: State Farm Stadium
          type: string
        postalCode:
          description: Postal/ZIP code
          nullable: true
          type: string
        territory:
          description: State or territory code
          example: AZ
          nullable: true
          type: string
      required:
      - id
      - name
      - city
      - country
      type: object
    VenuesResponse:
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        venues:
          items:
            $ref: '#/components/schemas/Venue'
          type: array
      type: object
    Week:
      properties:
        byeTeams:
          description: Teams on bye this week
          items:
            $ref: '#/components/schemas/Team'
          type: array
        dateBegin:
          description: Week start date
          format: date
          type: string
        dateEnd:
          description: Week end date
          format: date
          type: string
        season:
          description: Season year
          type: integer
        seasonType:
          description: Season type
          enum:
          - PRE
          - REG
          - POST
          type: string
        week:
          description: Week number
          type: integer
        weekType:
          description: Type of week (e.g., REG, HOF)
          type: string
      type: object
    WeeklyGameDetail:
      allOf:
      - $ref: '#/components/schemas/Game'
      - properties:
          awayTeamStandings:
            $ref: '#/components/schemas/Standings'
          driveChart:
            description: Drive-by-drive data
            nullable: true
            type: object
          homeTeamStandings:
            $ref: '#/components/schemas/Standings'
          replays:
            description: Replay video links
            items:
              type: object
            type: array
          summary:
            description: Game summary information
            nullable: true
            type: object
          taggedVideos:
            description: Tagged video content
            nullable: true
            type: object
        type: object
    WeeksResponse:
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        weeks:
          items:
            $ref: '#/components/schemas/Week'
          type: array
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      description: 'JWT token obtained from the /identity/v3/token endpoint.

        The token contains user permissions, subscription plans, location data, and
        roles.

        Include the token in the Authorization header as: Authorization: Bearer {accessToken}'
      scheme: bearer
      type: http

paths:
  /experience/v1/games:
    get:
      description: 'Retrieves game information for a specific season, season type,
        and week.

        Returns comprehensive game data including teams, venues, broadcast information,
        and ticket details.

        '
      operationId: getExperienceGames
      parameters:
      - description: Season year (e.g., 2025)
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Type of season
        in: query
        name: seasonType
        required: true
        schema:
          enum:
          - PRE
          - REG
          - POST
          example: REG
          type: string
      - description: Week number within the season
        in: query
        name: week
        required: true
        schema:
          example: 4
          maximum: 18
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceGamesResponse'
          description: Successfully retrieved games
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
      summary: Get Games by Season and Week
      tags:
      - Experience
  /experience/v1/teams:
    get:
      description: 'Retrieves information for all NFL teams including Pro Bowl teams.

        Returns comprehensive team data including logos, colors, venues, and social
        media links.

        '
      operationId: getExperienceTeams
      parameters:
      - description: Include all teams including special teams
        in: query
        name: allteams
        required: false
        schema:
          example: true
          type: boolean
      - description: Season year
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceTeamsResponse'
          description: Successfully retrieved teams
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get All Teams
      tags:
      - Experience
  /football/v2/draft/{year}:
    get:
      description: 'Retrieves draft information for a specific year including all
        rounds,

        picks, traded picks, and compensatory selections.

        '
      operationId: getDraftInfo
      parameters:
      - description: Draft year
        in: path
        name: year
        required: true
        schema:
          example: 2025
          type: integer
      - description: Filter by round
        in: query
        name: round
        required: false
        schema:
          maximum: 7
          minimum: 1
          type: integer
      - description: Filter by team
        in: query
        name: teamId
        required: false
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftResponse'
          description: Successfully retrieved draft information
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: Draft year not found
        '500':
          description: Internal server error
      summary: Get Draft Information
      tags:
      - Football
  /football/v2/experience/weekly-game-details:
    get:
      description: 'Retrieves detailed game information for a specific week including
        team standings,

        drive charts, replays, and tagged videos.

        '
      operationId: getWeeklyGameDetails
      parameters:
      - description: Season year
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Season type
        in: query
        name: type
        required: true
        schema:
          enum:
          - PRE
          - REG
          - POST
          example: REG
          type: string
      - description: Week number
        in: query
        name: week
        required: true
        schema:
          example: 4
          type: integer
      - description: Include drive chart data
        in: query
        name: includeDriveChart
        required: false
        schema:
          default: false
          type: boolean
      - description: Include replay videos
        in: query
        name: includeReplays
        required: false
        schema:
          default: false
          type: boolean
      - description: Include team standings
        in: query
        name: includeStandings
        required: false
        schema:
          default: false
          type: boolean
      - description: Include tagged video content
        in: query
        name: includeTaggedVideos
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeeklyGameDetail'
                type: array
          description: Successfully retrieved weekly game details
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get Weekly Game Details with Standings
      tags:
      - Football
  /football/v2/games/season/{season}/seasonType/{seasonType}/week/{week}:
    get:
      description: 'Retrieves game information for a specific season, season type,
        and week from the Football API.

        This endpoint provides core game data with external IDs.

        '
      operationId: getFootballGames
      parameters:
      - description: Season year
        in: path
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Type of season
        in: path
        name: seasonType
        required: true
        schema:
          enum:
          - PRE
          - REG
          - POST
          example: REG
          type: string
      - description: Week number
        in: path
        name: week
        required: true
        schema:
          example: 4
          type: integer
      - description: Include external IDs in response
        in: query
        name: withExternalIds
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FootballGamesResponse'
          description: Successfully retrieved games
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get Games by Season, Type, and Week
      tags:
      - Football
  /football/v2/games/{gameId}/boxscore:
    get:
      description: 'Retrieves comprehensive box score data for a specific game including

        team statistics, individual player statistics, and scoring summary.

        '
      operationId: getBoxScore
      parameters:
      - description: Game identifier (UUID)
        in: path
        name: gameId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxScoreResponse'
          description: Successfully retrieved box score
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: Game not found
        '500':
          description: Internal server error
      summary: Get Game Box Score
      tags:
      - Football
  /football/v2/games/{gameId}/playbyplay:
    get:
      description: 'Retrieves detailed play-by-play data for a specific game including

        all plays, drives, scoring events, and key statistics.

        '
      operationId: getPlayByPlay
      parameters:
      - description: Game identifier (UUID)
        in: path
        name: gameId
        required: true
        schema:
          format: uuid
          type: string
      - description: Include penalty details
        in: query
        name: includePenalties
        required: false
        schema:
          default: true
          type: boolean
      - description: Include offensive/defensive formations
        in: query
        name: includeFormations
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayByPlayResponse'
          description: Successfully retrieved play-by-play data
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: Game not found
        '500':
          description: Internal server error
      summary: Get Play-by-Play Data
      tags:
      - Football
  /football/v2/injuries:
    get:
      description: 'Retrieves current injury reports for all teams or specific teams

        with injury status, designation, and practice participation.

        '
      operationId: getInjuryReports
      parameters:
      - description: Season year
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Week number
        in: query
        name: week
        required: true
        schema:
          example: 4
          type: integer
      - description: Filter by specific team
        in: query
        name: teamId
        required: false
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InjuryReportResponse'
          description: Successfully retrieved injury reports
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get Injury Reports
      tags:
      - Football
  /football/v2/players/teams/{teamId}/roster:
    get:
      description: "Retrieves the complete roster for a specific team including active,\
        \ practice squad, \nand injured reserve players with detailed player information.\n"
      operationId: getTeamRoster
      parameters:
      - description: Team identifier (UUID)
        in: path
        name: teamId
        required: true
        schema:
          example: 10403800-517c-7b8c-65a3-c61b95d86123
          format: uuid
          type: string
      - description: Season year
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Include current season statistics
        in: query
        name: includeStats
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterResponse'
          description: Successfully retrieved roster
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: Team not found
        '500':
          description: Internal server error
      summary: Get Team Roster
      tags:
      - Football
  /football/v2/players/{playerId}:
    get:
      description: 'Retrieves detailed information about a specific player including
        biography,

        career statistics, and current season performance.

        '
      operationId: getPlayerDetails
      parameters:
      - description: Player identifier
        in: path
        name: playerId
        required: true
        schema:
          example: '2560726'
          type: string
      - description: Season for statistics (defaults to current)
        in: query
        name: season
        required: false
        schema:
          example: 2025
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDetail'
          description: Successfully retrieved player details
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: Player not found
        '500':
          description: Internal server error
      summary: Get Player Details
      tags:
      - Football
  /football/v2/standings:
    get:
      description: 'Retrieves team standings for a specific season, season type, and
        week.

        Includes division, conference, and overall standings with detailed statistics.

        '
      operationId: getStandings
      parameters:
      - description: Season year
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Type of season
        in: query
        name: seasonType
        required: true
        schema:
          enum:
          - PRE
          - REG
          - POST
          example: REG
          type: string
      - description: Week number
        in: query
        name: week
        required: true
        schema:
          example: 3
          type: integer
      - description: Maximum number of results to return
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingsResponse'
          description: Successfully retrieved standings
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get Standings
      tags:
      - Football
  /football/v2/stats/live/game-summaries:
    get:
      description: 'Retrieves live game statistics and summaries for games in progress
        or completed games.

        Provides real-time statistical data for specified season, type, and week.

        '
      operationId: getLiveGameStats
      parameters:
      - description: Season year
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Type of season
        in: query
        name: seasonType
        required: true
        schema:
          enum:
          - PRE
          - REG
          - POST
          example: REG
          type: string
      - description: Week number
        in: query
        name: week
        required: true
        schema:
          example: 4
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameStatsResponse'
          description: Successfully retrieved game statistics
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get Live Game Statistics
      tags:
      - Football
  /football/v2/stats/players/season:
    get:
      description: 'Retrieves aggregated player statistics for a specific season with
        filtering

        options by position, team, and statistical categories.

        '
      operationId: getSeasonPlayerStats
      parameters:
      - description: Season year
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Type of season
        in: query
        name: seasonType
        required: true
        schema:
          enum:
          - PRE
          - REG
          - POST
          example: REG
          type: string
      - description: Filter by position group
        in: query
        name: position
        required: false
        schema:
          enum:
          - QB
          - RB
          - WR
          - TE
          - OL
          - DL
          - LB
          - DB
          - K
          - P
          - LS
          type: string
      - description: Filter by team
        in: query
        name: teamId
        required: false
        schema:
          format: uuid
          type: string
      - description: Statistical category to retrieve
        in: query
        name: statCategory
        required: false
        schema:
          enum:
          - passing
          - rushing
          - receiving
          - defense
          - kicking
          - punting
          - returning
          example: passing
          type: string
      - description: Sort field and order
        in: query
        name: sort
        required: false
        schema:
          example: passingYards:desc
          type: string
      - description: Maximum number of results
        in: query
        name: limit
        required: false
        schema:
          default: 50
          maximum: 500
          minimum: 1
          type: integer
      - description: Offset for pagination
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStatsResponse'
          description: Successfully retrieved player statistics
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get Season Player Statistics
      tags:
      - Football
  /football/v2/transactions:
    get:
      description: 'Retrieves recent transactions including trades, signings, releases,

        practice squad moves, and injured reserve designations.

        '
      operationId: getTransactions
      parameters:
      - description: Start date for transactions (ISO 8601)
        in: query
        name: startDate
        required: false
        schema:
          example: '2025-01-01'
          format: date
          type: string
      - description: End date for transactions (ISO 8601)
        in: query
        name: endDate
        required: false
        schema:
          example: '2025-09-24'
          format: date
          type: string
      - description: Filter by team
        in: query
        name: teamId
        required: false
        schema:
          format: uuid
          type: string
      - description: Type of transaction
        in: query
        name: transactionType
        required: false
        schema:
          enum:
          - TRADE
          - SIGNED
          - RELEASED
          - WAIVED
          - PRACTICE_SQUAD
          - IR
          - SUSPENDED
          type: string
      - description: Maximum number of results
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
          description: Successfully retrieved transactions
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get Transactions
      tags:
      - Football
  /football/v2/venues:
    get:
      description: 'Retrieves information about all NFL stadiums and venues, including
        international venues.

        Provides venue details such as addresses, locations, and territories.

        '
      operationId: getVenues
      parameters:
      - description: Season year
        in: query
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Maximum number of venues to return
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenuesResponse'
          description: Successfully retrieved venues
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get NFL Venues
      tags:
      - Football
  /football/v2/weeks/season/{season}:
    get:
      description: 'Retrieves all weeks for a specific season including preseason,
        regular season, and postseason.

        Includes bye team information for each week.

        '
      operationId: getSeasonWeeks
      parameters:
      - description: Season year
        in: path
        name: season
        required: true
        schema:
          example: 2025
          type: integer
      - description: Maximum number of weeks to return
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeksResponse'
          description: Successfully retrieved weeks
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      summary: Get Season Weeks
      tags:
      - Football
  /identity/v3/token:
    post:
      description: "Creates a new access token and refresh token for a client device.\
        \ This is the initial authentication \nendpoint that establishes a session\
        \ for accessing NFL APIs. Requires client credentials and device information.\n"
      operationId: generateToken
      requestBody:
        content:
          application/json:
            example:
              clientKey: 4cFUW6DmwJpzT9L7LrG3qRAcABG5s04g
              clientSecret: CZuvCL49d9OwfGsR
              deviceId: 3cfdef35-c7fe-4f2d-8630-1ec72f52b44d
              deviceInfo: eyJtb2RlbCI6ImRlc2t0b3AiLCJ2ZXJzaW9uIjoiQ2hyb21lIiwib3NOYW1lIjoiV2luZG93cyIsIm9zVmVyc2lvbiI6IjEwIn0=
              networkType: other
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                expiresIn: 1758732647
                refreshToken: 0f5452b5-7f40-4c8e-9801-cf7fd2830de3
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: Successfully generated tokens
        '400':
          description: Invalid request parameters
        '401':
          description: Invalid client credentials
        '500':
          description: Internal server error
      summary: Generate Initial Access Token
      tags:
      - Authentication
  /identity/v3/token/refresh:
    post:
      description: "Refreshes an existing access token using a valid refresh token.\
        \ This endpoint extends the user's \nsession by generating new access and\
        \ refresh tokens. Requires the previous refresh token and \nsignature verification.\n"
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            example:
              clientKey: 4cFUW6DmwJpzT9L7LrG3qRAcABG5s04g
              clientSecret: CZuvCL49d9OwfGsR
              deviceId: 3cfdef35-c7fe-4f2d-8630-1ec72f52b44d
              deviceInfo: eyJtb2RlbCI6ImRlc2t0b3AiLCJ2ZXJzaW9uIjoiQ2hyb21lIiwib3NOYW1lIjoiV2luZG93cyIsIm9zVmVyc2lvbiI6IjEwIn0=
              networkType: other
              refreshToken: 640b00c7-33d8-44f2-ab46-e3d1284a4061
              signatureTimestamp: '1758729181'
              uid: df990acd951e4bd6940c3babc4341584
              uidSignature: 587bdNt6EKYhhX9ASFOELX+2lqE=
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                expiresIn: 1758732782
                refreshToken: a175ada6-a2e2-4689-8ea4-b9d6cfb0da13
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: Successfully refreshed tokens
        '400':
          description: Invalid request parameters
        '401':
          description: Invalid or expired refresh token
        '403':
          description: Invalid signature verification
        '500':
          description: Internal server error
      summary: Refresh Access Token
      tags:
      - Authentication


